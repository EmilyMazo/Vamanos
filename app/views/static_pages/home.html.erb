<!DOCTYPE html>

<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

      <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px;
      }

      #map_canvas{float:left;width:70%; height:100%;}
      
      #panel {
        position: absolute;
        top: 5px;
        left: 50%;
        margin-left: -180px;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
      }

      #directionsPanel {
        float:left;
        width:28%;
        height:100%;
        padding-left:5px;
      }
      .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;
        width: 400px;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
      }

      #pac-input:focus {
        border-color: #4d90fe;
        margin-left: -1px;
        padding-left: 14px;  /* Regular padding-left + 1. */
        width: 401px;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

      #target {
        width: 345px;
      }
 
      </style>


      <!--<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>-->
      <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>

      <script type="text/javascript"> 

    var rendererOptions = {
        draggable: true
      };
      var directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);;
      var directionsService = new google.maps.DirectionsService();
      var map;
     

    


     
      function initialize() {

       

        directionsDisplay = new google.maps.DirectionsRenderer();
        var philadelphia = new google.maps.LatLng(39.95,-75.1667);
        var myOptions = {
          zoom:13,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          center: philadelphia
        }
         var markers = [];
      map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById("directionsPanel"));
      
      

         // Create the search box and link it to the UI element.
        var input = /** @type {HTMLInputElement} */(
            document.getElementById('pac-input'));
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var searchBox = new google.maps.places.SearchBox(
        /** @type {HTMLInputElement} */(input));

        google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
          computeTotalDistance(directionsDisplay.directions);
        });
        
       /* calcRoute();*/
      
      defaultSettings();
      
        // [START region_getplaces]
    // Listen for the event fired when the user selects an item from the
    // pick list. Retrieve the matching places for that item.
    google.maps.event.addListener(searchBox, 'places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }
      for (var i = 0, marker; marker = markers[i]; i++) {
        marker.setMap(null);
      }
      // For each place, get the icon, place name, and location.
      markers = [];
      var bounds = new google.maps.LatLngBounds();
      for (var i = 0, place; place = places[i]; i++) {
        var image = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

       // Create a marker for each place.
      var marker = new google.maps.Marker({
        map: map,
        icon: image,
        title: place.name,
        position: place.geometry.location
      });

      markers.push(marker);

      bounds.extend(place.geometry.location);
    }

     map.fitBounds(bounds);
   }); /*ends add event listener*/

   // [END region_getplaces]
     // Bias the SearchBox results towards places that are within the bounds of the
  // current map's viewport.
    google.maps.event.addListener(map, 'bounds_changed', function() {
      var bounds = map.getBounds();
      searchBox.setBounds(bounds);
    });

  }
      
      function calcRoute() {
        
        
      if (document.getElementById("start").value != "") {
        activeSettings();
      }
      else{
        defaultSettings();
        }
      

        var start = document.getElementById("start").value;
        var end = document.getElementById("end").value;
        var request = {
            origin:start, 
            destination:end,
            travelMode: google.maps.DirectionsTravelMode.DRIVING
        };
        directionsService.route(request, function(response, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
          }
        });
      
      var defaultBounds = new google.maps.LatLngBounds(
            new google.maps.LatLng(start),
            new google.maps.LatLng(end));
        map.fitBounds(defaultBounds); 

      }
      
    function computeTotalDistance(result) {
      var total = 0;
      var myroute = result.routes[0];
      for (i = 0; i < myroute.legs.length; i++) {
        total += myroute.legs[i].distance.value;
      }
      total = total / 1000.
      document.getElementById("total").innerHTML = "Total Distance:" + total + " mi";
    }   

      
      
      function defaultSettings(){
      /* set properties */
      document.getElementById("map-canvas").style.width="100%";
      document.getElementById("directionsPanel").style.display="none";
      document.getElementById("total").style.display="none";    
  

        }
      
      function activeSettings(){
      /* set properties */
      document.getElementById("map-canvas").style.width="70%";
      document.getElementById("directionsPanel").style.display="block";
      document.getElementById("total").style.display="block";  
      
        }
      
      window.onload=function(){
        initialize();

        }
  google.maps.event.addDomListener(window, 'load', initialize);

    </script>
    <script>(function() {with (this[2]) {with (this[1]) {with (this[0]) {return function(event) {calcRoute()
      };}}}})</script>


  </head>

  <body>
    <div>
      <br>
      <strong>Enter origin: </strong>
      <input type="text" name="start" id="start" style="width:250px;" >    
      <strong>Enter destination: </strong>
      <input type="text" name="end" id="end" style="width:250px;" >  
      
      <input id="pac-input" class="controls" type="text" placeholder="Enter Via Point">
      <input type="button" value="Submit" onClick="calcRoute();"/>  
    </div>
    <div id="map-canvas"></div>
    <div id="directionsPanel">
    <p><span id="total"></span></p>
    </div>
  </body>
    
</html>

<!-- API KEY : AIzaSyAr5oNsZqX2C8IsZYcjAjnQ_yLMPRKagNE -->